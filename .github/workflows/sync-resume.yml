name: Sync Resume from Google Docs

on:
  schedule:
    # Runs daily at 2 AM UTC (adjust to your preference)
    - cron: '0 2 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  sync-resume:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT || github.token }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install --break-system-packages google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client pypandoc
          # Install pandoc for document conversion
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra
      
      - name: Create credentials file
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > credentials.json

          # Debug: Verify credentials file was created (without showing contents)
          if [ -f credentials.json ]; then
            echo "✓ credentials.json created successfully"
            echo "  File size: $(wc -c < credentials.json) bytes"
          else
            echo "✗ Failed to create credentials.json"
            exit 1
          fi
      
      - name: Download and convert resume
        env:
          GOOGLE_DOC_ID: ${{ secrets.GOOGLE_DOC_ID }}
        run: |
          python sync_resume.py
      
      - name: Check for changes
        id: check_changes
        run: |
          git config user.name "Resume Bot"
          git config user.email "bot@github.com"

          # Debug: Show what files were downloaded
          echo "=== Files in working directory ==="
          ls -lah resume.* || echo "No resume files found"

          # Debug: Show git status before adding
          echo "=== Git status before staging ==="
          git status

          # Add the resume files to staging area
          git add resume.pdf resume.docx

          # Debug: Show git status after adding
          echo "=== Git status after staging ==="
          git status

          # Check if there are any changes (staged or unstaged)
          if git diff --staged --quiet; then
            echo "=== No changes detected ==="
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "=== Changes detected ==="
            git diff --staged --stat
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          # Files are already staged from the previous step
          git commit -m "Update resume from Google Docs [$(date +'%Y-%m-%d %H:%M:%S UTC')]"

          echo "=== Pushing to remote ==="
          git push

          echo "✓ Resume successfully synced and pushed"
      
      - name: Cleanup credentials
        if: always()
        run: |
          rm -f credentials.json
